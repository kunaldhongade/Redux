import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { ordered as cakeOrdered } from "../cake/cakeSlice";

type InitialState = {
  numOfIcecreams: number;
};

const initialState: InitialState = {
  numOfIcecreams: 20,
};

const icecreamSlice = createSlice({
  name: "icecream",
  initialState: initialState,
  reducers: {
    ordered: (state) => {
      state.numOfIcecreams--;
    },
    restocked: (state, actions: PayloadAction<number>) => {
      state.numOfIcecreams = state.numOfIcecreams + actions.payload;
    },
    // extraReducers: {
    //     ['cake/ordered']: (state) => {
    //         state.numOfIcecreams--
    //     }
    // }
  },
  extraReducers: (builder) => {
    builder.addCase(cakeOrdered, (state) => {
      state.numOfIcecreams--;
    });
  },
});

export default icecreamSlice.reducer;
export const { ordered, restocked } = icecreamSlice.actions;
// export reducers as default exports actions as named exports

// in redux toolkit each reducer cannot respond to other actions dispatch in application
// by default reducer from slice will only respond to action types generated by same slice
// if we want to a slice to respond to other action types besides the types it has generated you need to use extra reducer
// // extra reducers are reducers generated apart from original reducers
